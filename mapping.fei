
#ELEMENT_ID
	 nc "Nodal Command" 
	 ec "General Elemental Commands"
	 sc "Singular Commands"
	 mv "Material Variational Commands"
	 nv "Nodal Variational Commands"
	 ev "Elemental Varaiational Commands"
	 an "Add Node Commands"
	 cc "Connect Commands"
	 wr "Write Commands"
	 0 "Element-cum-physicalgroup commands"     //Hybrid of Element and Node Commands
	 1 "2-node line."
	 2 "3-node triangle."
	 3 "4-node quadrangle."
	 4 "4-node tetrahedron."
	 5 "8-node hexahedron." 
	 6 "6-node prism."
	 7 "5-node pyramid."
	 8 "3-node second order line (2 nodes associated with the vertices and 1 with the edge)."
	 9 "6-node second order triangle (3 nodes associated with the vertices and 3 with the edges)."
	10 "9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face)."
	11 "10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges)."
	12 "27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume)."
	13 "18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces)."
	14 "14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face)."
	15 "1-node point."
	16 "8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges)."
	17 "20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges)."
	18 "15-node second order prism (6 nodes associated with the vertices and 9 with the edges)."
	19 "13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges)."
	20 "9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)"
	21 "10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)"
	22 "12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)"
	23 "15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)"
	24 "15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)"
	25 "21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)"
	26 "4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)"
	27 "5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)"
	28 "6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)"
	29 "20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)"
	30 "35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)"
	31 "56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)"
	32 "64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)"
	33 "125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)"
#ENDELEMENT_ID

#ESSI_TAGS
	element
	damping
	displacement
	field
	load
	material
	motion 
	node
	nodes
	section
#ENDESSI_TAGS

	// find := \$\{([0-9#]*):([a-zA-Z0-9_#]*)\s*\}
	// replace := $2:= ${$1:<> } 

// Write Commands

	!wr <Write_Data{filename}|Write_Data{phyEntyTag,filename}>		 																																							{} {};

// Nodal Variational Commands

	!nv <Vary_Node_Mass{mx,my,mz}|Vary_Node_Mass{PhyEntTag,mx,my,mz}>													            																							add mass to node #{} mx ={} my ={} mz ={} ;
	!nv <Vary_Node_Mass{mx,my,mz,Imx,Imy,Imz}|Vary_Node_Mass{PhyEntTag,mx,my,mz,Imx,Imy,Imz}>										            																				add mass to node #{} mx ={} my ={} mz ={} Imx ={} Imy ={} Imz ={};
	!nv <Vary_Penalty_Node{stiffness, dof}|Vary_Penalty_Node{PhyEntTag,stiffness, dof}>									            																							add element #{} type penalty_for_applying_generalized_displacement with node ({}) stiffness = {} dof {};
	!nv <Vary_Node_Damping{damping#1}|Vary_Node_Damping{PhyEntTag,damping#1}>										            																								add damping #{} to node #{};
	!nv <Vary_Fix{r1}|Vary_Fix{PhyEntTag,r1}>							            																																			fix node #{} dofs {};
	!nv <Vary_Fix{r1,r2}|Vary_Fix{PhyEntTag,r1,r2}>							            																																		fix node #{} dofs {} {};
	!nv <Vary_Fix{r1,r2,r3}|Vary_Fix{PhyEntTag,r1,r2,r3}>							            																																fix node #{} dofs {} {} {};
	!nv <Vary_Fix{r1,r2,r3,r4}|Vary_Fix{PhyEntTag,r1,r2,r3,r4}>							            																															fix node #{} dofs {} {} {} {};
	!nv <Vary_Fix{r1,r2,r3,r4,r5}|Vary_Fix{PhyEntTag,r1,r2,r3,r4,r5}>							            																													fix node #{} dofs {} {} {} {} {};
	!nv <Vary_Fix{r1,r2,r3,r4,r5,r6}|Vary_Fix{PhyEntTag,r1,r2,r3,r4,r5,r6}>							            																												fix node #{} dofs {} {} {} {} {} {};
	!nv <Vary_Fix{r1,r2,r3,r4,r5,r6,r7}|Vary_Fix{PhyEntTag,r1,r2,r3,r4,r5,r6,r7}>							            																										fix node #{} dofs {} {} {} {} {} {} {};
	!nv <Vary_Fix{r1,r2,r3,r4,r5,r6,r7,r8}|Vary_Fix{PhyEntTag,r1,r2,r3,r4,r5,r6,r7,r8}>							            																									fix node #{} dofs {} {} {} {} {} {} {} {};
	!nv <Vary_Free{r1}|Vary_Free{PhyEntTag,r1}>							            																																			free node #{} dofs {};
	!nv <Vary_Free{r1,r2}|Vary_Free{PhyEntTag,r1,r2}>							            																																	free node #{} dofs {} {}; 
	!nv <Vary_Free{r1,r2,r3}|Vary_Free{PhyEntTag,r1,r2,r3}>							            																																free node #{} dofs {} {} {}; 
	!nv <Vary_Free{r1,r2,r3,r4}|Vary_Free{PhyEntTag,r1,r2,r3,r4}>							            																														free node #{} dofs {} {} {} {}; 
	!nv <Vary_Free{r1,r2,r3,r4,r5}|Vary_Free{PhyEntTag,r1,r2,r3,r4,r5}>							            																													free node #{} dofs {} {} {} {} {}; 
	!nv <Vary_Free{r1,r2,r3,r4,r5,r6}|Vary_Free{PhyEntTag,r1,r2,r3,r4,r5,r6}>							            																											free node #{} dofs {} {} {} {} {} {}; 
	!nv <Vary_Free{r1,r2,r3,r4,r5,r6,r7}|Vary_Free{PhyEntTag,r1,r2,r3,r4,r5,r6,r7}>							            																										free node #{} dofs {} {} {} {} {} {} {}; 
	!nv <Vary_Free{r1,r2,r3,r4,r5,r6,r7,r8}|Vary_Free{PhyEntTag,r1,r2,r3,r4,r5,r6,r7,r8}>							            																								free node #{} dofs {} {} {} {} {} {} {} {};
	!nv <Vary_Master_Slave{node#1,dof}|Vary_Master_Slave{PhyEntTag,node#1,dof}>										            																								add constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
	!nv <Vary_Single_Point_Constraint{dof,val}|Vary_Single_Point_Constraint{PhyEntTag,dof,val}>									            																					add single point constraint to node #{}  dof to constrain {} constraint value of {};
	!nv <Vary_Node_Load_Linear{Dir,mag}|Vary_Node_Load_Linear{PhyEntTag,Dir,mag}>												            																					add load #{} to node #{} type linear {}= {}; 
	!nv <Vary_Node_Load_Path_Series{Dir,mag,time_step,seriesfile}|Vary_Node_Load_Path_Series{PhyEntTag,Dir,mag,time_step,seriesfile}>						            														add load #{} to node #{} type path_series {} = {} time_step = {} series_file ={};
	!nv <Vary_Node_Load_Path_Time_Series{Dir,mag,seriesfile}|Vary_Node_Load_Path_Time_Series{PhyEntTag,Dir,mag,seriesfile}>			            																				add load #{} to node #{} type path_time_series {} = {} series_file ={};
	!nv <Vary_Imposed_Motion_Time_Series{dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}|Vary_Imposed_Motion_Time_Series{PhyEntTag,dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 					add imposed motion #{} to node #{} dof {} time_step = {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};
	!nv <Vary_Imposed_Motion{dof,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}|Vary_Imposed_Motion{PhyEntTag,dof,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 																add imposed motion #{} to node #{} dof {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};	

// Material Variational Commands

	!mv <Vary_Linear_elastic_isotropic_3d{Element{},par1,par2,par3}|Vary_Linear_elastic_isotropic_3d{PhyEntytag,Element{},par1,par2,par3}>																																																																							add material #{} type linear_elastic_isotropic_3d mass_density={} elastic_modulus={} poisson_ratio={};
	!mv <Vary_Linear_elastic_crossanisotropic{Element{},par1,par2,par3,par4,par5,par6}|Vary_Linear_elastic_crossanisotropic{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6}>																																																													add material #{} type linear_elastic_crossanisotropic mass_density={} elastic_modulus_horizontal={} elastic_modulus_vertical={} poisson_ratio_h_v={} poisson_ratio_h_h={} shear_modulus_h_v={};
	!mv <Vary_Vonmises_perfectly_plastic{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Vonmises_perfectly_plastic{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																					add material #{} type vonmises_perfectly_plastic mass_density={} elastic_modulus={} poisson_ratio={}  von_mises_radius={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Vonmises_perfectly_plastic_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8}|Vary_Vonmises_perfectly_plastic_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8}>																																																					add material #{} type vonmises_perfectly_plastic_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} initial_confining_stress={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
	!mv <Vary_Vonmises_isotropic_hardening{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Vary_Vonmises_isotropic_hardening{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																																	add material #{} type vonmises_isotropic_hardening mass_density={} elastic_modulus={}  poisson_ratio={}  von_mises_radius={}  isotropic_hardening_rate={}  initial_confining_stress={} algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
	!mv <Vary_Vonmises_isotropic_hardening_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9}|Vary_Vonmises_isotropic_hardening_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9}> 																																																	add material #{} type vonmises_isotropic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} isotropic_hardening_rate={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Vonmises_kinematic_hardening{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Vary_Vonmises_kinematic_hardening{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																														add material #{} type vonmises_kinematic_hardening mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Vonmises_linear_kinematic_hardening{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Vary_Vonmises_linear_kinematic_hardening{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}> 																																														add material #{} type vonmises_linear_kinematic_hardening mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} kinematic_hardening_rate={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Vonmises_kinematic_hardening_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Vary_Vonmises_kinematic_hardening_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																											add material #{} type vonmises_kinematic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} initial_confining_strain={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Vonmises_linear_kinematic_hardening_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Vonmises_linear_kinematic_hardening_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																											add material #{} type vonmises_linear_kinematic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} kinematic_hardening_rate={} initial_confining_stress={} initial_confining_strain={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_perfectly_plastic{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Druckerprager_perfectly_plastic{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																			add material #{} type druckerprager_perfectly_plastic mass_density={} elastic_modulus={} poisson_ratio={} druckerprager_angle={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_perfectly_plastic_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8}|Vary_Druckerprager_perfectly_plastic_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8}>																																																		add material #{} type druckerprager_perfectly_plastic_accelerated  mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_isotropic_hardening{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Vary_Druckerprager_isotropic_hardening{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																															add material #{} type druckerprager_isotropic_hardening mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} isotropic_hardening_rate={} initial_confining_stress={} algorithm={}  number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_isotropic_hardening_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9}|Vary_Druckerprager_isotropic_hardening_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9}>																																															add material #{} type druckerprager_isotropic_hardening_accelerated mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} isotropic_hardening_rate={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_kinematic_hardening{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Vary_Druckerprager_kinematic_hardening{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																												add material #{} type druckerprager_kinematic_hardening mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} algorithm={}  number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Druckerprager_kinematic_hardening_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Druckerprager_kinematic_hardening_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}> 																																											add material #{} type druckerprager_kinematic_hardening_accelerated mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_CamClay{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14}|Vary_CamClay{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14}> 																																																		add material #{} type camclay mass_density={} reference_void_ratio={} critical_stress_ratio_M={} lambda={} kappa={} poisson_ratio={} minimum_bulk_modulus={} pressure_reference_p0={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_CamClay_accelerated{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Vary_CamClay_accelerated{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																																			add material #{} type camclay_accelerated mass_density={} reference_void_ratio={} critical_stress_ratio_M={} lambda={} kappa={} poisson_ratio={} minimum_bulk_modulus={} pressure_reference_p0={} initial_confining_stress={}  maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
	!mv <Vary_Sanisand2004{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25}|Vary_Sanisand2004{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25}>															add material #{} type sanisand2004 mass_density={} e0={} sanisand2004_G0={} poisson_ratio={} sanisand2004_Pat={}  sanisand2004_p_cut={}  sanisand2004_Mc={}  sanisand2004_c={} sanisand2004_lambda_c={} sanisand2004_xi={}  sanisand2004_ec_ref={}  sanisand2004_m={}  sanisand2004_h0={} sanisand2004_ch={}  sanisand2004_nb={} sanisand2004_A0={} sanisand2004_nd={} sanisand2004_z_max={}  sanisand2004_cz={} initial_confining_stress={}  algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
	!mv <Vary_Sanisand2008{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25,par26,par27,par28,par29,par30}|Vary_Sanisand2008{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25,par26,par27,par28,par29,par30}>			add material #{} type sanisand2008 mass_density={}  e0={}  sanisand2008_G0={}  sanisand2008_K0={} sanisand2008_Pat={} sanisand2008_k_c={}  sanisand2008_alpha_cc={} sanisand2008_c={}  sanisand2008_xi={}  sanisand2008_lambda={}  sanisand2008_ec_ref={}  sanisand2008_m={}  sanisand2008_h0={}  sanisand2008_ch={}  sanisand2008_nb={}  sanisand2008_A0={} sanisand2008_nd={}  sanisand2008_p_r={}  sanisand2008_rho_c={}  sanisand2008_theta_c={}  sanisand2008_X={}  sanisand2008_z_max={}  sanisand2008_cz={}  sanisand2008_p0={}  sanisand2008_p_in={}  algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
	!mv <Vary_Pisano{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Pisano{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																															add material #{} type pisano elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
	!mv <Vary_Uniaxial_elastic{Element{},par1,par2}|<Vary_Uniaxial_elastic{PhyEntytag,Element{},par1,par2}>																																																																															add material #{} type uniaxial_elastic elastic_modulus={} viscoelastic_modulus={};
	!mv <Vary_Uniaxial_concrete02{Element{},par1,par2,par3,par4,par5,par6,par7}|Vary_Uniaxial_concrete02{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7}> 																																																																add material #{} type uniaxial_concrete02 compressive_strength={} strain_at_compressive_strength={} crushing_strength={}  strain_at_crushing_strength={} lambda={} tensile_strength={} tension_softening_stiffness={};
	!mv <Vary_Uniaxial_steel01{Element{},par1,par2,par3,par4,par5,par6,par7}|Vary_Uniaxial_steel01{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7}>																																																																		add material #{} type uniaxial_steel01 yield_strength={} elastic_modulus={} strain_hardening_ratio={} a1={} a2={} a3={} a4={};
	!mv <Vary_Uniaxial_steel02{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Uniaxial_steel02{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																										add material #{} type uniaxial_steel02 yield_strength={} elastic_modulus={} strain_hardening_ratio={} R0={} cR1={} cR2={} a1={} a2={} a3={} a4={};
	!mv <Vary_PisanoLT{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_PisanoLT{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																														add material #{} type pisanoLT elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
	!mv <Vary_New_PisanoLT{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_New_PisanoLT{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																												add material #{} type New_PisanoLT elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
	!mv <Vary_Linear_elastic_isotropic_3d_LT{Element{},par1,par2,par3}|Vary_Linear_elastic_isotropic_3d_LT{PhyEntytag,Element{},par1,par2,par3}>																																																																					add material #{} type linear_elastic_isotropic_3d_LT mass_density={} elastic_modulus={} poisson_ratio={};	
	!mv <Vary_Vonmises_perfectly_plastic_LT{Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Vary_Vonmises_perfectly_plastic_LT{PhyEntytag,Element{},par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																				add material #{} type vonmises_perfectly_plastic_LT mass_density={} elastic_modulus={} poisson_ratio={}  von_mises_radius={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};

//Variational Genereal Elemental Command

	// !ev <Vary_Self_Weight{field#1}|Vary_Self_Weight{PhyEntTag,field#1}>							    																														add load #{} to element #{} type self_weight use acceleration field #{} ;
	// !ev <Vary_Element_Damping{damping#1}|Vary_Element_Damping{PhyEntTag,damping#1}>				    																														add damping #{} to element #{};
	!ev <Vary_Penalty_Element_Displacement_Linear{dof}|Vary_Penalty_Element_Displacement_Linear{PhyEntTag,dof}>		    																									add penalty displacement #{} to element #{} dof {} type linear;
	!ev <Vary_Penalty_Element_Displacement_Path_Time_Series{dof,scale_factor,series_file}|Vary_Penalty_Element_Displacement_Path_Time_Series{PhyEntTag,dof,scale_factor,series_file}>		    							add penalty displacement #{} to element #{} dof {} type path_time_series scale_factor = {} series_file = {};
	!ev <Vary_Penalty_Element_Displacement_Path_Series{dof,time_step,scale_factor,series_file}|Vary_Penalty_Element_Displacement_Path_Series{PhyEntTag,dof,time_step,scale_factor,series_file}>		    					add penalty displacement #{} to element #{} dof {} type path_series time_step= {} scale_factor = {} series_file = {};

//Variational Elemental Command

	// Elemental Commands  --- 1 2-node line.

		!1-v <Vary_Beam_Elastic_Lumped_Mass{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Vary_Beam_Elastic_Lumped_Mass{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>									add element #{} type beam_elastic_lumped_mass with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{}); 
		!1-v <Vary_Truss{material#1,cs,md}|Vary_Truss{PhyEntTag,material#1,cs,md}>								    																									add element #{} type truss with nodes ({},{}) use material #{} cross_section ={} mass_density={} ; 
		!1-v <Vary_Contact{ns,ts,fr,mg,cp1,cp2,cp3}|Vary_Contact{PhyEntTag,ns,ts,fr,mg,cp1,cp2,cp3}>											    																	add element #{} type contact with nodes ({},{}) normal_stiffness={} tangential_stiffness={} friction_ratio={} maximum_gap={} contact_plane_vector=({},{},{});
		!1-v <Vary_Beam_Elastic{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Vary_Beam_Elastic{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>															add element #{} type beam_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		!1-v <Vary_Penalty{stiffness,dof}|Vary_Penalty{PhyEntTag,stiffness,dof}>												    																					add element #{} type penalty with nodes ({},{}) stiffness={}  dof to constrain {};
		!1-v <Vary_Beam_Displacement_Based{material#1,section,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13}|Vary_Beam_Displacement_Based{PhyEntTagmaterial#1,section,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13}>						add element #{} type beam_displacement_based with nodes ({},{}) with #{}  integration_points use section #{} mass_density={} IntegrationRule={}			  xz_plane_vector= ({},{},{}) joint_1_offset= ({},{},{}) joint_2_offset= ({},{},{});
		!1-v <Vary_Beam_9dof_Elastic{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Vary_Beam_9dof_Elastic{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>													add element #{} type beam_9dof_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		!1-v <Vary_ShearBeamLT{cross_section,material#1}|Vary_ShearBeamLT{PhyEntTag,cross_section,material#1}>																											add element #{} type ShearBeamLT with nodes ({},{}) cross_section={} use material #{};
		
	//Elemental Commands  --- 2 3-node triangle.
		
		!2-v <Vary_3NodeShell_ANDES{material#1,thickness}|Vary_3NodeShell_ANDES{PhyEntTag,material#1,thickness}>				    																					add element #{} type 3NodeShell_ANDES with nodes ({},{},{}) use material #{} thickness= {};	
		
	//Elemental Commands  --- 3 4-node quadrangle.

		!3-v <Vary_4NodeShell_ANDES{material#1,thickness}|Vary_4NodeShell_ANDES{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{}) use material #{} thickness= {};
		!3-v <Vary_4NodeShell_MITC4{material#1,thickness}|Vary_4NodeShell_MITC4{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
		!3-v <Vary_4NodeShell_NewMITC4{material#1,thickness}|Vary_4NodeShell_NewMITC4{PhyEntTag,material#1,thickness}>		    																						add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
		
	//Elemental Commands  --- 4 4-node tetrahedron.
	//Elemental Commands  --- 5 8-node hexahedron.
		
		!5-v <Vary_8NodeBrick_up{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Vary_8NodeBrick_up{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>									add element #{} type 8NodeBrick_up with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		!5-v <Vary_8NodeBrick_upU{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Vary_8NodeBrick_upU{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>									add element #{} type 8NodeBrick_upU with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = { k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		!5-vc <Vary_8NodeBrick_SurfaceLoad{PhyEntTag,m1}|Vary_8NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1}>																											add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitude ({});
		!5-vc <Vary_8NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4}|Vary_8NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4}>									    										        add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitudes ({},{},{},{});
		
	//Elemental Commands  --- 6 6-node prism.
	//Elemental Commands  --- 7 5-node pyramid.
	//Elemental Commands  --- 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge).
	//Elemental Commands  --- 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges).
	//Elemental Commands  --- 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face).

		!10-v <Vary_9NodeShell_ANDES{material#1,thickness}|Vary_9NodeShell_ANDES{PhyEntTag,material#1,thickness}>											    														add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};
		!10-v <Vary_9NodeShell_NewMITC4{material#1,thickness}|Vary_9NodeShell_NewMITC4{PhyEntTag,material#1,thickness}>				    																				add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};
		!10-v <Vary_9NodeShell_MITC4{material#1,thickness}|Vary_9NodeShell_MITC4{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};

	//Elemental Commands  --- 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges).u
	//Elemental Commands  --- 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume).

		!12-vc <Vary_27NodeBrick_SurfaceLoad{PhyEntTag,magnitude}|Vary_27NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,magnitude}>																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
		!12-vc <Vary_27NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}|Vary_27NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>																add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});
		
	//Elemental Commands  --- 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces).
	//Elemental Commands  --- 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face).
	//Elemental Commands  --- 15 1-node point.
	//Elemental Commands  --- 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges).
	//Elemental Commands  --- 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges).

		!17-v  <Vary_20NodeBrick_upU{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Vary_20NodeBrick_upU{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>								add element #{} type 20NodeBrick_upU with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} and porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {}	K_f = {};
		!17-vc <Vary_20NodeBrick_SurfaceLoad{PhyEntTag,magnitude}|Vary_20NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,magnitude}>																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{},{}) with magnitude ({});
		!17-vc <Vary_20NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}|Vary_20NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>				 												add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{},{});
		
	//Elemental Commands  --- 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges).
	//Elemental Commands  --- 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges).
	//Elemental Commands  --- 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)
	//Elemental Commands  --- 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)
	//Elemental Commands  --- 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)
	//Elemental Commands  --- 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)
	//Elemental Commands  --- 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)
	//Elemental Commands  --- 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)
	//Elemental Commands  --- 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)
	//Elemental Commands  --- 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)
	//Elemental Commands  --- 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)
	//Elemental Commands  --- 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)
	//Elemental Commands  --- 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)
	//Elemental Commands  --- 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)
	//Elemental Commands  --- 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)
	//Elemental Commands  --- 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)

// Add Node Commands

	!an <Add_Node{unit,dof}|Add_Node{PhyEntTag,unit,dof}>																add node # {} at ({},{},{}) with {} dofs;
	!an <Add_All_Node{unit,dof}>																						add node # {} at ({},{},{}) with {} dofs;

// Connect Commands

	!cc <Connect{PhyEntTag,PhyEntTag,PhyEntyTag,dv1,mag,noT,algo,Tolerence,PhysicalGroupName}>							{} {};				

// Singular Commands 

	// Damping Commands

		!sc <Add_Rayleigh_Damping{a0,a1,stiffness}|Add_Rayleigh_Damping{damping#1,a0,a1,stiffness}>						add damping #{} type Rayleigh with a0={}  a1={}  stiffness_to_use={};                               
		!sc <Add_Caughey3rd_Damping{a0,a1,a2,stiffness}|Add_Caughey3rd_Damping{damping#1,a0,a1,a2,stiffness}>			add damping #{} type Caughey3rd with a0={} a1={} a2={} stiffness_to_use={};          
		!sc <Add_Caughey4th_Damping{a0,a1,a2,a3,stiffness}|Add_Caughey4th_Damping{damping#1,a0,a1,a2,a3,stiffness}>		add damping #{} type Caughey4th with a0={} a1={} a2={} a3={} stiffness_to_use={};  

	//Variables in ESSI 

		!sc <Var{variable,value}>																						{} {} = {};
		!sc <Include{filename}>																							include {};
		!sc <New_Line{}|>																								{};	
		!sc <Comment{comment}|>																							{} //{};
		!sc <Bye{}>																										bye;		

	//Acceleration field

		!sc <Add_Acceleration_Field{field#1,ax,ay,az}|Add_Acceleration_Field{ax,ay,az}>									add acceleration field #{} ax={} ay={} az={};		

	// Simulation Commands

		!sc <Define_Algorithm{With_no_convergence_check|Newton|Modified_Newton}>										define algorithm {};
		!sc <Define_Convergence_Test{convergence_test_method,tolerence,maximum_iterations,verbose_level}>				define convergence test {} tolerance={} maximum_iterations={}  verbose_level={};
		!sc <Define_Hibler_Hughes_Taylor_dynamic_integration{alpha}>													define dynamic integrator Hilber_Hughes_Taylor with alpha={};
		!sc <Define_Newmark_dynamic_integration{gamma,beta}>															define dynamic integrator Newmark with gamma={}  beta={};
		!sc <Define_Load_Factor_increament{incr}>																		define load factor increment {};
		!sc <Define_Solver_ProfileSPD{}>																				define solver ProfileSPD;
		!sc <Define_Solver_UMFPack{}>																					define solver UMFPack;
		!sc <Define_Static_Integrator_Displacement_Control{node#1,dof,incr}>											define static integrator displacement_control using node #{}  dof {} increment {} ;
		!sc <Simulate_Steps_Using_Static_Algorithm{nofsteps}>															simulate {} steps using static algorithm;
		!sc <Simulate_Steps_Using_Transient_Algorithm{nofsteps,time_step}>												simulate {} steps using transient algorithm time_step={} ;
		!sc <Simulate_Steps_Using_Variable_Transient_Algorithm{nofsteps,time_step,min_time_step,max,nof_iter}>			simulate {} steps using variable transient algorithm time_step={} minimum_time_step={} maximum_time_step={} number_of_iterations={};
		!sc <Simulate_Constitutive_Testing_Constant_Pressure_Triaxial_Strain_Control{material#1,par1,par2,par3}>		simulate constitutive testing constant mean pressure triaxial strain control use material #{} strain_increment_size={}	maximum_strain={} number_of_times_reaching_maximum_strain={} ;
		!sc <Simulate_Constitutive_Testing_Drained_Triaxial_Strain_Control{material#1,par1,par2,par3}> 					simulate constitutive testing drained triaxial strain control use material # {} strain_increment_size={} maximum_strain={} number_of_times_reaching_maximum_strain={};
		!sc <Simulate_Constitutive_Testing_Undrained_Simple_Shear{material#1,par1,par2,par3}>  							simulate constitutive testing undrained simple shear use material #{} strain_increment_size={} maximum_strain={} number_of_times_reaching_maximum_strain={};
		!sc <Simulate_Constitutive_Testing_Undrained_Triaxial_Stress_Control{material#1,par1,par2,par3}> 				simulate constitutive testing undrained triaxial stress control use material #{} strain_increment_size={} maximum_strain={} number_of_times_reaching_maximum_strain={};
		!sc <Simulate_Constitutive_Testing_Undrained_Triaxial{material#1,par1,par2,par3}> 								simulate constitutive testing undrained triaxial use material #{} strain_increment_size={} maximum_strain={} number_of_times_reaching_maximum_strain={};
		!sc <Simulate_Using_Eigen_Algorithm{no_of_modes}>																simulate using eigen algorithm number_of_modes={};
		!sc <Save_Model_Response_To_MySql{arg1,arg2,arg3,arg4,arg5,arg6}>												save response of model type mysql databasename {} host {} username {} password {} port {} socket {};
		!sc <Save_Model_State_To_MySql{arg1,arg2,arg3,arg4,arg5,arg6}>													save state of model type mysql databasename {} host {} username {} password {} port {} socket {};
		!sc <Restore_Model_State_To_MySql{arg1,arg2,arg3,arg4,arg5,arg6}>												restore state of model type mysql databasename {} host {} username {} password {} port {} socket {};
		!sc <Set_Output_Compression_level{arg1}>																		set output compression level to {};
		!sc <Disable_Output{}>																							disable output;
		!sc <Enable_Output{}>																							enable output;
		!sc <Enable_Element_Output{}>																					enable element output;
		!sc <Print_Material{material_no}>																				print material #{};
		!sc <Print_Domain{}>																							print domain;
		!sc <Output_Step{step}>																							output every {} step;
		!sc <Add_New_Loading_Stage{name_string}>																		new loading stage {};
		!sc <Model_Name{name_in_string}>																				model name {};
		!sc <Check_Mesh{filename}>																						check mesh {};
		!sc <Add_Node_From_File{filename,dof}>																			add nodes from file {}  with {} dofs;		
		!sc <Add_Element_From_File{filename}>																			add element from file {};	
		
	//Material Commands

		!sc <Add_Linear_elastic_isotropic_3d{material#1,par1,par2,par3}|Add_Linear_elastic_isotropic_3d{par1,par2,par3}>																																																																									add material #{} type linear_elastic_isotropic_3d mass_density={} elastic_modulus={} poisson_ratio={};
		!sc <Add_Linear_elastic_crossanisotropic{material#1,par1,par2,par3,par4,par5,par6}|Add_Linear_elastic_crossanisotropic{par1,par2,par3,par4,par5,par6}>																																																																add material #{} type linear_elastic_crossanisotropic mass_density={} elastic_modulus_horizontal={} elastic_modulus_vertical={} poisson_ratio_h_v={} poisson_ratio_h_h={} shear_modulus_h_v={};
		!sc <Add_Vonmises_perfectly_plastic{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Vonmises_perfectly_plastic{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																								add material #{} type vonmises_perfectly_plastic mass_density={} elastic_modulus={} poisson_ratio={}  von_mises_radius={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Vonmises_perfectly_plastic_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8}|Add_Vonmises_perfectly_plastic_accelerated{par1,par2,par3,par4,par5,par6,par7,par8}>																																																							add material #{} type vonmises_perfectly_plastic_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} initial_confining_stress={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
		!sc <Add_Vonmises_isotropic_hardening{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Add_Vonmises_isotropic_hardening{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																																				add material #{} type vonmises_isotropic_hardening mass_density={} elastic_modulus={}  poisson_ratio={}  von_mises_radius={}  isotropic_hardening_rate={}  initial_confining_stress={} algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
		!sc <Add_Vonmises_isotropic_hardening_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9}|Add_Vonmises_isotropic_hardening_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9}> 																																																				add material #{} type vonmises_isotropic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} isotropic_hardening_rate={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Vonmises_kinematic_hardening{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Add_Vonmises_kinematic_hardening{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																																	add material #{} type vonmises_kinematic_hardening mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Vonmises_linear_kinematic_hardening{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Add_Vonmises_linear_kinematic_hardening{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}> 																																																add material #{} type vonmises_linear_kinematic_hardening mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} kinematic_hardening_rate={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Vonmises_kinematic_hardening_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Add_Vonmises_kinematic_hardening_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																														add material #{} type vonmises_kinematic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} initial_confining_strain={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Vonmises_linear_kinematic_hardening_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Vonmises_linear_kinematic_hardening_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																													add material #{} type vonmises_linear_kinematic_hardening_accelerated mass_density={} elastic_modulus={} poisson_ratio={} von_mises_radius={} kinematic_hardening_rate={} initial_confining_stress={} initial_confining_strain={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_perfectly_plastic{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Druckerprager_perfectly_plastic{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																					add material #{} type druckerprager_perfectly_plastic mass_density={} elastic_modulus={} poisson_ratio={} druckerprager_angle={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_perfectly_plastic_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8}|Add_Druckerprager_perfectly_plastic_accelerated{par1,par2,par3,par4,par5,par6,par7,par8}>																																																					add material #{} type druckerprager_perfectly_plastic_accelerated  mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_isotropic_hardening{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}|Add_Druckerprager_isotropic_hardening{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11}>																																																	add material #{} type druckerprager_isotropic_hardening mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} isotropic_hardening_rate={} initial_confining_stress={} algorithm={}  number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_isotropic_hardening_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9}|Add_Druckerprager_isotropic_hardening_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9}>																																																	add material #{} type druckerprager_isotropic_hardening_accelerated mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} isotropic_hardening_rate={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_kinematic_hardening{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Add_Druckerprager_kinematic_hardening{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																														add material #{} type druckerprager_kinematic_hardening mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} algorithm={}  number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Druckerprager_kinematic_hardening_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Druckerprager_kinematic_hardening_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}> 																																														add material #{} type druckerprager_kinematic_hardening_accelerated mass_density={} elastic_modulus={}  poisson_ratio={} druckerprager_angle={} armstrong_frederick_ha={} armstrong_frederick_cr={} initial_confining_stress={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_CamClay{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14}|Add_CamClay{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14}> 																																																					add material #{} type camclay mass_density={} reference_void_ratio={} critical_stress_ratio_M={} lambda={} kappa={} poisson_ratio={} minimum_bulk_modulus={} pressure_reference_p0={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_CamClay_accelerated{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}|Add_CamClay_accelerated{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12}>																																																					add material #{} type camclay_accelerated mass_density={} reference_void_ratio={} critical_stress_ratio_M={} lambda={} kappa={} poisson_ratio={} minimum_bulk_modulus={} pressure_reference_p0={} initial_confining_stress={}  maximum_number_of_iterations={} tolerance_1={} tolerance_2={};
		!sc <Add_Sanisand2004{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25}|Add_Sanisand2004{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25}>																		add material #{} type sanisand2004 mass_density={} e0={} sanisand2004_G0={} poisson_ratio={} sanisand2004_Pat={}  sanisand2004_p_cut={}  sanisand2004_Mc={}  sanisand2004_c={} sanisand2004_lambda_c={} sanisand2004_xi={}  sanisand2004_ec_ref={}  sanisand2004_m={}  sanisand2004_h0={} sanisand2004_ch={}  sanisand2004_nb={} sanisand2004_A0={} sanisand2004_nd={} sanisand2004_z_max={}  sanisand2004_cz={} initial_confining_stress={}  algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
		!sc <Add_Sanisand2008{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25,par26,par27,par28,par29,par30}|Add_Sanisand2008{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10,par11,par12,par13,par14,par15,par16,par17,par18,par19,par20,par21,par22,par23,par24,par25,par26,par27,par28,par29,par30}>			add material #{} type sanisand2008 mass_density={}  e0={}  sanisand2008_G0={}  sanisand2008_K0={} sanisand2008_Pat={} sanisand2008_k_c={}  sanisand2008_alpha_cc={} sanisand2008_c={}  sanisand2008_xi={}  sanisand2008_lambda={}  sanisand2008_ec_ref={}  sanisand2008_m={}  sanisand2008_h0={}  sanisand2008_ch={}  sanisand2008_nb={}  sanisand2008_A0={} sanisand2008_nd={}  sanisand2008_p_r={}  sanisand2008_rho_c={}  sanisand2008_theta_c={}  sanisand2008_X={}  sanisand2008_z_max={}  sanisand2008_cz={}  sanisand2008_p0={}  sanisand2008_p_in={}  algorithm={}  number_of_subincrements={}  maximum_number_of_iterations={}  tolerance_1={}  tolerance_2={};
		!sc <Add_Pisano{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Pisano{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																																		add material #{} type pisano elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
		!sc <Add_Uniaxial_elastic{material#1,par1,par2}|Add_Uniaxial_elastic{par1,par2}>																																																																																	add material #{} type uniaxial_elastic elastic_modulus={} viscoelastic_modulus={};
		!sc <Add_Uniaxial_concrete02{material#1,par1,par2,par3,par4,par5,par6,par7}|Add_Uniaxial_concrete02{par1,par2,par3,par4,par5,par6,par7}> 																																																																			add material #{} type uniaxial_concrete02 compressive_strength={} strain_at_compressive_strength={} crushing_strength={}  strain_at_crushing_strength={} lambda={} tensile_strength={} tension_softening_stiffness={};
		!sc <Add_Uniaxial_steel01{material#1,par1,par2,par3,par4,par5,par6,par7}|Add_Uniaxial_steel01{par1,par2,par3,par4,par5,par6,par7}>																																																																					add material #{} type uniaxial_steel01 yield_strength={} elastic_modulus={} strain_hardening_ratio={} a1={} a2={} a3={} a4={};
		!sc <Add_Uniaxial_steel02{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Uniaxial_steel02{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																													add material #{} type uniaxial_steel02 yield_strength={} elastic_modulus={} strain_hardening_ratio={} R0={} cR1={} cR2={} a1={} a2={} a3={} a4={};
		!sc <Add_PisanoLT{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_PisanoLT{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																																	add material #{} type pisanoLT elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
		!sc <Add_New_PisanoLT{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_New_PisanoLT{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																															add material #{} type New_PisanoLT elastic_modulus={} poisson_ratio={} M_in={} kd_in={} xi_in={} h_in={} m_in={} mass_density={} initial_confining_stress={} beta_min={};
		!sc <Add_Linear_elastic_isotropic_3d_LT{material#1,par1,par2,par3}|Add_Linear_elastic_isotropic_3d_LT{par1,par2,par3}>																																																																								add material #{} type linear_elastic_isotropic_3d_LT mass_density={} elastic_modulus={} poisson_ratio={};	
		!sc <Add_Vonmises_perfectly_plastic_LT{material#1,par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}|Add_Vonmises_perfectly_plastic_LT{par1,par2,par3,par4,par5,par6,par7,par8,par9,par10}>																																																						add material #{} type vonmises_perfectly_plastic_LT mass_density={} elastic_modulus={} poisson_ratio={}  von_mises_radius={} initial_confining_stress={} algorithm={} number_of_subincrements={} maximum_number_of_iterations={} tolerance_1={} tolerance_2={};

	// Section Definition

		!sc <Add_Section_Elastic_Membrane_Plate{section#1,elastic_modulus,poissons_ratio,thickness,mass_density}>  																																																																											add section #{} type Elastic_Membrane_Plate  elastic_modulus={}  poisson_ratio={}  thickness={}  mass_density={};
		!sc <Add_Section_Membrane_Plate_Fiber{section#1,thickness,material#1}> 																																																																																				add section #{} type Membrane_Plate_Fiber thickness={}  use material #{};

	// Elemental Derived Commands --- 1 2-node line.

		// !sc <BeamElasticLumpedMass{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>		add element #{} type beam_elastic_lumped_mass with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		// !sc <Truss{nodes#1,nodes#2,material#1,cs,md}>								    							add element #{} type truss with nodes ({},{}) use material #{} cross_section ={} mass_density={} ; 
		// !sc <Contact{nodes#1,nodes#2,ns,ts,fr,mg,cp1,cp2,cp3}>											    		add element #{} type contact with nodes ({},{}) normal_stiffness={} tangential_stiffness={} friction_ratio={} maximum_gap={} contact_plane_vector=({},{},{});
		// !sc <BeamElastic{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>					add element #{} type beam_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		// !sc <Penalty{nodes#1,nodes#2,stiffness,dof}>									    							add element #{} type penalty with nodes ({},{}) stiffness={}  dof to constrain {};
		// !sc <BeamDisplacementBased{element#1,nodes#1,nodes#2,material#1}>											add element #{} type beam_displacement_based with nodes ({},{}) with #{} integration_points use section #{} mass_density={} IntegrationRule={} xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});	
		// !sc <Beam9dofElastic{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>				add element #{} type beam_9dof_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});

	// Elemental Derived Commands --- 2 3-node triangle.

		// !sc <3NodeShell_ANDES{nodes#1,nodes#2,nodes#3,material#1,thickness}>				    						add element #{} type 3NodeShell_ANDES with nodes ({},{},{}) use material #{} thickness= {};	

	// Elemental Derived Commands --- 3 4-node quadrangle.

		// !sc <4NodeShell_ANDES{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    				add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{}) use material #{} thickness= {};
		// !sc <4NodeShell_MITC4{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    				add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
		// !sc <4NodeShell_NewMITC4{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>		    					add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{}) use material #{} thickness= {};

	// Elemental Derived Commands --- 4 4-node tetrahedron.

	// Elemental Derived Commands --- 5 8-node hexahedron.

		// !sc <8NodeBrick{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 				add element #{} type 8NodeBrick with nodes ({},{},{},{},{},{},{},{}) use material #{};
		// !sc <8NodeBrick_gauss_points{,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 	add element #{} type 8NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{}) use material #{};
		// !sc <8NodeBrickLT{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>				add element #{} type 8NodeBrickLT with nodes ({},{},{},{},{},{},{},{}) use material #{};
		// !sc <8NodeBrick_elastic{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>			add element #{} type 8NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{}) use material #{};
		// !sc <8NodeBrick_u{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>				add element #{} type 8NodeBrick_up with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		// !sc <8NodeBrick_upU{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>				add element #{} type 8NodeBrick_upU with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = { k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		// !sc <8NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,magnitude}>							add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitude ({});
		// !sc <8NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,m1,m2,m3,m4}>							add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitudes ({},{},{},{});

	// Elemental Derived Command --- 6 6-node prism.
	// Elemental Derived Command --- 7 5-node pyramid.
	// Elemental Derived Command --- 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge).
	// Elemental Derived Command --- 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges).
	// Elemental Derived Command --- 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face).
	// Elemental Derived Command --- 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges).u
	// Elemental Derived Command --- 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume).

		// !sc <27NodeBrick{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>					add element #{} type 27NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		// !sc <27NodeBrick_gauss_points{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>		add element #{} type 27NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		// !sc <27NodeBrickLT{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>				add element #{} type 27NodeBrickLT with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		// !sc <27NodeBrick_elastic{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>			add element #{} type 27NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		// !sc <27NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,magnitude}>																																										add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
		// !sc <27NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,m1,m2,m3,m4,m5,m6,m7,m8}>																																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});

	//Elemental Derived Commands  --- 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces).
	//Elemental Derived Commands  --- 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face).
	//Elemental Derived Commands  --- 15 1-node point.

		!sc <Add_Domain_Reduction_Method{loading#1,ts,sf,nos,nobn,noen,node,ef,bnf,enf,df,af}> 								add domain reduction method loading #{} time_step={} scale_factor={} number_of_steps={} number_of_boundary_nodes={} number_of_exterior_nodes={} number_of_drm_elements={} element_file={} boundary_nodes_file={} exterior_nodes_file={} displacement_file={} acceleration_file={};
		!sc <Add_Single_Node_mass{node#1,mx,my,mz}>													        				add mass to node #{} mx ={} my ={} mz ={} ;
		!sc <Add_Single_Node_mass{node#1,mx,my,mz,Imx,Imy,Imz}>										        				add mass to node #{} mx ={} my ={} mz ={} Imx ={} Imy ={} Imz ={};
		!sc <Add_Single_Penalty_Node{node#1,stiffness, dof}>									            				add element #{} type penalty_for_applying_generalized_displacement with node ({}) stiffness = {} dof {};
		!sc <Add_Single_Node_Damping{damping#1,node#1}>										            					add damping #{} to node #{};
		!sc <FixNode{node#1,r1}>							            													fix node #{} dofs {};
		!sc <FixNode{node#1,r1,r2}>							            													fix node #{} dofs {} {};
		!sc <FixNode{node#1,r1,r2,r3}>							            												fix node #{} dofs {} {} {} 
		!sc <FixNode{node#1,r1,r2,r3,r4}>							            											fix node #{} dofs {} {} {} {};
		!sc <FixNode{node#1,r1,r2,r3,r4,r5}>							            										fix node #{} dofs {} {} {} {} {};
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6}>							            										fix node #{} dofs {} {} {} {} {} {};
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6,r7}>							            									fix node #{} dofs {} {} {} {} {} {} {};
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6,r7,r8}>							            								fix node #{} dofs {} {} {} {} {} {} {} {};
		!sc <FreeNode{node#1,r1}>							            													free node #{} dofs {};
		!sc <FreeNode{node#1,r1,r2}>							            												free node #{} dofs {} {};
		!sc <FreeNode{node#1,r1,r2,r3}>							            												free node #{} dofs {} {} {};
		!sc <FreeNode{node#1,r1,r2,r3,r4}>							            											free node #{} dofs {} {} {} {};
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5}>							            										free node #{} dofs {} {} {} {} {};
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6}>							            									free node #{} dofs {} {} {} {} {} {};
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6,r7}>							            									free node #{} dofs {} {} {} {} {} {} {};
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6,r7,r8}>							            								free node #{} dofs {} {} {} {} {} {} {} {};
		!sc <Add_Single_Master_Slave{node#1,node#2,dof}>										           	 				add constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
		!sc <Add_Single_Remove_Master_Slave{node#1}>									        							remove constraint equaldof node #{};
		!sc <Add_Single_Node_Point_Constraint{node#1,dof,val}>									            				add single point constraint to node #{}  dof to constrain {} constraint value of {};
		!sc <Add_Single_Node_Load_linear{node#1,dir,mag}>												    				add load #{} to node #{} type linear {} = {}; 
		!sc <Add_Single_Node_Load_Path_Series{node#1,path_series,dir,mag,seriesfile}>										add load #{} to node #{} type path_series {} = {} series_file ={};
		!sc <Add_Single_Node_Load_Path_Time_Series{node#1,path_time_series,dir,mag,time_step,seriesfile}>					add load #{} to node #{} type path_time_series {} = {} time_step = {} series_file ={};
		!sc <Add_Single_Imposed_Motion_Time_Series{node#1,dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 		add imposed motion #{} to node #{} dof {} time_step = {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};
		!sc <Add_Single_Imposed_Motion_{node#1,dof,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 							add imposed motion #{} to node #{} dof {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};		
		!sc <Remove_Single_Load{load#1}>																					remove load #{};
		!sc <Remove_Imposed_Motion{motion#1}>																				remove imposed motion #{};
		!sc <Remove_Single_Element{element#1}>																				remove element #{};
		!sc <Remove_Single_Node{node#1}>																					remove node #{};

	//Elemental Derived Commands  --- 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges).
	//Elemental Derived Commands  --- 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges).

		// !sc <20NodeBrick{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>								add element #{} type 20NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material # ;
		// !sc <20NodeBrick_gauss_points{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>			 	add element #{} type 20NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
		// !sc <20NodeBrick_elastic{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>						add element #{} type 20NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
		// !sc <20NodeBrick_upU{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>							add element #{} type 20NodeBrick_upU with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} and porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {}	K_f = {};
		// !sc <20NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,magnitude}>									 																				add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
		// !sc <20NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,m1,m2,m3,m4,m5,m6,m7,m8}>				 																						add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});

	//Elemental Derived Commands  --- 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges).
	//Elemental Derived Commands  --- 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges).
	//Elemental Derived Commands  --- 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)
	//Elemental Derived Commands  --- 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)
	//Elemental Derived Commands  --- 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)
	//Elemental Derived Commands  --- 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)
	//Elemental Derived Commands  --- 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)
	//Elemental Derived Commands  --- 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)
	//Elemental Derived Commands  --- 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)
	//Elemental Derived Commands  --- 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)
	//Elemental Derived Commands  --- 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)
	//Elemental Derived Commands  --- 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)
	//Elemental Derived Commands  --- 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)
	//Elemental Derived Commands  --- 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)
	//Elemental Derived Commands  --- 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)
	//Elemental Derived Commands  --- 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)

// General Elemental Commands

	!ec <Add_Self_Weight{field#1}|Add_Self_Weight{PhyEntTag,field#1}>							    																											add load #{} to element #{} type self_weight use acceleration field #{} ;
	!ec <Add_Element_Damping{damping#1}|Add_Element_Damping{PhyEntTag,damping#1}>				    																											add damping #{} to element #{};
	!ec <Add_Penalty_Element_Displacement_Linear{dof}|Add_Penalty_Element_Displacement_Linear{PhyEntTag,dof}>		    																						add penalty displacement #{} to element #{} dof {} type linear;
	!ec <Add_Penalty_Element_Displacement_Path_Time_Series{dof,scale_factor,series_file}|Add_Penalty_Element_Displacement_Path_Time_Series{PhyEntTag,dof,scale_factor,series_file}>		    					add penalty displacement #{} to element #{} dof {} type path_time_series scale_factor = {} series_file = {};
	!ec <Add_Penalty_Element_Displacement_Path_Series{dof,time_step,scale_factor,series_file}|Add_Penalty_Element_Displacement_Path_Series{PhyEntTag,dof,time_step,scale_factor,series_file}>		    		add penalty displacement #{} to element #{} dof {} type path_series time_step= {} scale_factor = {} series_file = {};
	!ec <Check_Element{}|Check_Element{PhyEntTag}>																																								check element #{};
	!ec <Print_Element{}|Print_Element{PhyEntTag}>																																								print element #{};

// Elemental Commands  --- 1 2-node line.

	!1 <Add_Beam_Elastic_Lumped_Mass{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Add_Beam_Elastic_Lumped_Mass{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>									add element #{} type beam_elastic_lumped_mass with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{}); 
	!1 <Add_Truss{material#1,cs,md}|Add_Truss{PhyEntTag,material#1,cs,md}>								    																									add element #{} type truss with nodes ({},{}) use material #{} cross_section ={} mass_density={} ; 
	!1 <Add_Contact{ns,ts,fr,mg,cp1,cp2,cp3}|Add_Contact{PhyEntTag,ns,ts,fr,mg,cp1,cp2,cp3}>											    																	add element #{} type contact with nodes ({},{}) normal_stiffness={} tangential_stiffness={} friction_ratio={} maximum_gap={} contact_plane_vector=({},{},{});
	!1 <Add_Beam_Elastic{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Add_Beam_Elastic{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>															add element #{} type beam_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
	!1 <Add_Penalty{stiffness,dof}|Add_Penalty{PhyEntTag,stiffness,dof}>												    																					add element #{} type penalty with nodes ({},{}) stiffness={}  dof to constrain {};
	!1 <Add_Beam_Displacement_Based{material#1,section,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13}|Add_Beam_Displacement_Based{PhyEntTagmaterial#1,section,v3,v4,v5,v6,v7,v8,v9,v10,v11,v12,v13}>						add element #{} type beam_displacement_based with nodes ({},{}) with #{}  integration_points use section #{} mass_density={} IntegrationRule={}			  xz_plane_vector= ({},{},{}) joint_1_offset= ({},{},{}) joint_2_offset= ({},{},{});
	!1 <Add_Beam_9dof_Elastic{cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Add_Beam_9dof_Elastic{PhyEntTag,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>													add element #{} type beam_9dof_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
	!1 <Add_ShearBeamLT{cross_section,material#1}|Add_ShearBeamLT{PhyEntTag,cross_section,material#1}>																											add element #{} type ShearBeamLT with nodes ({},{}) cross_section={} use material #{};
	
//Elemental Commands  --- 2 3-node triangle.
	
	!2 <Add_3NodeShell_ANDES{material#1,thickness}|Add_3NodeShell_ANDES{PhyEntTag,material#1,thickness}>				    																					add element #{} type 3NodeShell_ANDES with nodes ({},{},{}) use material #{} thickness= {};	
	
//Elemental Commands  --- 3 4-node quadrangle.

	!3 <Add_4NodeShell_ANDES{material#1,thickness}|Add_4NodeShell_ANDES{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{}) use material #{} thickness= {};
	!3 <Add_4NodeShell_MITC4{material#1,thickness}|Add_4NodeShell_MITC4{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
	!3 <Add_4NodeShell_NewMITC4{material#1,thickness}|Add_4NodeShell_NewMITC4{PhyEntTag,material#1,thickness}>		    																						add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
	
//Elemental Commands  --- 4 4-node tetrahedron.

//Elemental Commands  --- 5 8-node hexahedron.
	
	!5 <Add_Variable_8-27NodeBrick{material#1}|Add_Variable_8-27NodeBrick{PhyEntTag,material#1}>																												add element #{} type variable_node_brick_8_to_27 using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <Add_8NodeBrick{material#1}|Add_8NodeBrick{PhyEntTag,material#1}> 																																		add element #{} type 8NodeBrick with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <Add_8NodeBrick_gauss_points{material#1}|Add_8NodeBrick_gauss_points{PhyEntTag,material#1}> 																												add element #{} type 8NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <Add_8NodeBrickLT{material#1}|Add_8NodeBrickLT{PhyEntTag,material#1}>																																	add element #{} type 8NodeBrickLT with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <Add_8NodeBrick_elastic{material#1}|Add_8NodeBrick_elastic{PhyEntTag,material#1}>																														add element #{} type 8NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <Add_8NodeBrick_up{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Add_8NodeBrick_up{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>									add element #{} type 8NodeBrick_up with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
	!5 <Add_8NodeBrick_upU{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Add_8NodeBrick_upU{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>									add element #{} type 8NodeBrick_upU with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = { k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
	!5-c <Add_8NodeBrick_SurfaceLoad{PhyEntTag,m1}|Add_8NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1}>																											add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitude ({});
	!5-c <Add_8NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4}|Add_8NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4}>									    										        add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitudes ({},{},{},{});
	
//Elemental Commands  --- 6 6-node prism.
//Elemental Commands  --- 7 5-node pyramid.
//Elemental Commands  --- 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge).
//Elemental Commands  --- 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges).
//Elemental Commands  --- 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face).

	!10 <Add_9NodeShell_ANDES{material#1,thickness}|Add_9NodeShell_ANDES{PhyEntTag,material#1,thickness}>											    														add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};
	!10 <Add_9NodeShell_NewMITC4{material#1,thickness}|Add_9NodeShell_NewMITC4{PhyEntTag,material#1,thickness}>				    																				add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};
	!10 <Add_9NodeShell_MITC4{material#1,thickness}|Add_9NodeShell_MITC4{PhyEntTag,material#1,thickness}>				    																					add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{},{},{},{},{},{}) use material #{} thickness= {};

//Elemental Commands  --- 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges).u
//Elemental Commands  --- 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume).

	!12 <Add_Variable_8-27NodeBrick{material#1}|Add_Variable_8-27NodeBrick{PhyEntTag,material#1}>																												add element #{} type variable_node_brick_8_to_27 using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <Add_27NodeBrick{material#1}|Add_27NodeBrick{PhyEntTag,material#1}>																																		add element #{} type 27NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <Add_27NodeBrick_gauss_points{material#1}|Add_27NodeBrick_gauss_points{PhyEntTag,material#1}>																											add element #{} type 27NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <Add_27NodeBrickLT{material#1}|Add_27NodeBrickLT{PhyEntTag,material#1}>																																	add element #{} type 27NodeBrickLT with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <Add_27NodeBrick_elastic{material#1}|Add_27NodeBrick_elastic{PhyEntTag,material#1}>																														add element #{} type 27NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12-c <Add_27NodeBrick_SurfaceLoad{PhyEntTag,magnitude}|Add_27NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,magnitude}>																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
	!12-c <Add_27NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}|Add_27NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>																add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});
	
//Elemental Commands  --- 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces).
//Elemental Commands  --- 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face).
//Elemental Commands  --- 15 1-node point.

	!nc <Add_Node_Mass{mx,my,mz}|Add_Node_Mass{PhyEntTag,mx,my,mz}>													            																				add mass to node #{} mx ={} my ={} mz ={} ;
	!nc <Add_Node_Mass{mx,my,mz,Imx,Imy,Imz}|Add_Node_Mass{PhyEntTag,mx,my,mz,Imx,Imy,Imz}>										            																	add mass to node #{} mx ={} my ={} mz ={} Imx ={} Imy ={} Imz ={};
	!nc <Add_Penalty_Node{stiffness, dof}|Add_Penalty_Node{PhyEntTag,stiffness, dof}>									            																			add element #{} type penalty_for_applying_generalized_displacement with node ({}) stiffness = {} dof {};
	!nc <Add_Node_Damping{damping#1}|Add_Node_Damping{PhyEntTag,damping#1}>										            																					add damping #{} to node #{};
	!nc <Fix{r1}|Fix{PhyEntTag,r1}>							            																																		fix node #{} dofs {};
	!nc <Fix{r1,r2}|Fix{PhyEntTag,r1,r2}>							            																																fix node #{} dofs {} {};
	!nc <Fix{r1,r2,r3}|Fix{PhyEntTag,r1,r2,r3}>							            																															fix node #{} dofs {} {} {};
	!nc <Fix{r1,r2,r3,r4}|Fix{PhyEntTag,r1,r2,r3,r4}>							            																													fix node #{} dofs {} {} {} {};
	!nc <Fix{r1,r2,r3,r4,r5}|Fix{PhyEntTag,r1,r2,r3,r4,r5}>							            																												fix node #{} dofs {} {} {} {} {};
	!nc <Fix{r1,r2,r3,r4,r5,r6}|Fix{PhyEntTag,r1,r2,r3,r4,r5,r6}>							            																										fix node #{} dofs {} {} {} {} {} {};
	!nc <Fix{r1,r2,r3,r4,r5,r6,r7}|Fix{PhyEntTag,r1,r2,r3,r4,r5,r6,r7}>							            																									fix node #{} dofs {} {} {} {} {} {} {};
	!nc <Fix{r1,r2,r3,r4,r5,r6,r7,r8}|Fix{PhyEntTag,r1,r2,r3,r4,r5,r6,r7,r8}>							            																							fix node #{} dofs {} {} {} {} {} {} {} {};
	!nc <Free{r1}|Free{PhyEntTag,r1}>							            																																	free node #{} dofs {};
	!nc <Free{r1,r2}|Free{PhyEntTag,r1,r2}>							            																																free node #{} dofs {} {}; 
	!nc <Free{r1,r2,r3}|Free{PhyEntTag,r1,r2,r3}>							            																														free node #{} dofs {} {} {}; 
	!nc <Free{r1,r2,r3,r4}|Free{PhyEntTag,r1,r2,r3,r4}>							            																													free node #{} dofs {} {} {} {}; 
	!nc <Free{r1,r2,r3,r4,r5}|Free{PhyEntTag,r1,r2,r3,r4,r5}>							            																											free node #{} dofs {} {} {} {} {}; 
	!nc <Free{r1,r2,r3,r4,r5,r6}|Free{PhyEntTag,r1,r2,r3,r4,r5,r6}>							            																										free node #{} dofs {} {} {} {} {} {}; 
	!nc <Free{r1,r2,r3,r4,r5,r6,r7}|Free{PhyEntTag,r1,r2,r3,r4,r5,r6,r7}>							            																								free node #{} dofs {} {} {} {} {} {} {}; 
	!nc <Free{r1,r2,r3,r4,r5,r6,r7,r8}|Free{PhyEntTag,r1,r2,r3,r4,r5,r6,r7,r8}>							            																							free node #{} dofs {} {} {} {} {} {} {} {};
	!nc <Add_Master_Slave{node#1,dof}|Add_Master_Slave{PhyEntTag,node#1,dof}>										            																				add constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
	!nc <Remove_Master_Slave{}|Remove_Master_Slave{PhyEntTag}>									            																									remove constraint equaldof node #{};
	!nc <Add_Single_Point_Constraint{dof,val}|Add_Single_Point_Constraint{PhyEntTag,dof,val}>									            																	add single point constraint to node #{}  dof to constrain {} constraint value of {};
	!nc <Add_Node_Load_Linear{Dir,mag}|Add_Node_Load_Linear{PhyEntTag,Dir,mag}>												            																		add load #{} to node #{} type linear {}= {}; 
	!nc <Add_Node_Load_Path_Series{Dir,mag,time_step,seriesfile}|Add_Node_Load_Path_Series{PhyEntTag,Dir,mag,time_step,seriesfile}>						            											add load #{} to node #{} type path_series {} = {} time_step = {} series_file ={};
	!nc <Add_Node_Load_Path_Time_Series{Dir,mag,seriesfile}|Add_Node_Load_Path_Time_Series{PhyEntTag,Dir,mag,seriesfile}>			            																add load #{} to node #{} type path_time_series {} = {} series_file ={};
	!nc <Add_Imposed_Motion_Time_Series{dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}|Add_Imposed_Motion_Time_Series{PhyEntTag,dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 		add imposed motion #{} to node #{} dof {} time_step = {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};
	!nc <Add_Imposed_Motion{dof,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}|Add_Imposed_Motion{PhyEntTag,dof,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 													add imposed motion #{} to node #{} dof {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};	
	!nc <Add_Node_Load_From_Reaction{}|Add_Node_Load_From_Reaction{PhyEntTag}>																																	add load #{} to node #{} from_reactions; 
	!nc <Print_Node{}|Print_Node{PhyEntTag}>																																									print node #{};

//Elemental Commands  --- 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges).
//Elemental Commands  --- 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges).

	!17 <Add_Variable_8-27NodeBrick{material#1}|Add_Variable_8-27NodeBrick{PhyEntTag,material#1}>																												add element #{} type variable_node_brick_8_to_27 using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!17 <Add_20NodeBrick_gauss_points{material#1}|Add_20NodeBrick_gauss_points{PhyEntTag,material#1}>																											add element #{} type 20NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
	!17 <Add_20NodeBrick{material#1}|Add_20NodeBrick{PhyEntTag,material#1}>			 																															add element #{} type 20NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
	!17 <Add_20NodeBrick_elastic{material#1}|Add_20NodeBrick_elastic{PhyEntTag,material#1}>											 																			add element #{} type 20NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
	!17 <Add_20NodeBrick_upU{material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}|Add_20NodeBrick_upU{PhyEntTag,material#1,porosity,alpha,rho_s,rho_f,k_x,k_y,k_z,K_s,K_f}>								add element #{} type 20NodeBrick_upU with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} and porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {}	K_f = {};
	!17-c <Add_20NodeBrick_SurfaceLoad{PhyEntTag,magnitude}|Add_20NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,magnitude}>																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{},{}) with magnitude ({});
	!17-c <Add_20NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}|Add_20NodeBrick_SurfaceLoad{PhyEntTag,PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>				 												add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{},{});
	
//Elemental Commands  --- 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges).
//Elemental Commands  --- 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges).
//Elemental Commands  --- 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)
//Elemental Commands  --- 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)
//Elemental Commands  --- 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)
//Elemental Commands  --- 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)
//Elemental Commands  --- 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)
//Elemental Commands  --- 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)
//Elemental Commands  --- 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)
//Elemental Commands  --- 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)
//Elemental Commands  --- 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)
//Elemental Commands  --- 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)
//Elemental Commands  --- 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)
//Elemental Commands  --- 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)
//Elemental Commands  --- 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)
//Elemental Commands  --- 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)
