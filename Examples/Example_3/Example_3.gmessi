GmESSI.loadMshFile("Example_3.msh")

#0 4 "Tower"
#2 2 "Soil_Base_Surface"
#2 3 "Soil_Top_Surface"
#3 1 "Soil"


// My new model
[Define_Model_Name{ModelName:= "Tower"}]

# Creating three beams of 2m each connecting to the tower
[Connect{Physical_Group#Tower, Physical_Group#Soil_Top_Surface, Physical_Group#Soil_Top_Surface, dv1:= 0 \ 0 \ -1, mag:= 2, Tolerence:= 0, algo:= create, noT:= 3, PhysicalGroupName:= Tower_Beam_Above_Ground}]

NewPhysicalTag = GmESSI.getNewPhysicalTag();
NewEntityTag  =  GmESSI.getNewEntityTag();

print(NewPhysicalTag);

TowerPhysicalGroup = GmESSI.getPhysicalGroupElements('Tower_Beam_Above_Ground');
NewElement = TowerPhysicalGroup[len(TowerPhysicalGroup)-1];
Tower_Beam_node_on_Ground = (NewElement.getNodeList()[1]);

NodeMap = GmESSI.getNodeMap();

NewElementNo = GmESSI.getNewGmshTag('element');
ElementDesc = str(NewElementNo) + ' 15 2 ' + str(NewPhysicalTag) +' ' + str(NewEntityTag) + ' ' + str(Tower_Beam_node_on_Ground);
NewElement = gmessi.Element(ElementDesc);
GmESSI.addElement(NewElement)

NodeList = gmessi.NodeList();
ElementList = gmessi.ElementList();


NodeList.append(NodeMap[Tower_Beam_node_on_Ground]);
ElementList.append(NewElement);
GmESSI.CreatePhysicalGroup('TowerBaseNode',NodeList,ElementList);

# 3 m embedded inside the ground with each beam length of 1m 
[Connect{Physical_Group#TowerBaseNode, Physical_Group#Soil_Base_Surface, Physical_Group#Soil, dv1:= 0 \ 0 \ -1, mag:= 1, Tolerence:= 0, algo:= find, noT:= 3, PhysicalGroupName:= Tower_Embedded_Beam}]

# Adding 6dofs nodes of beam
[Add_Node{Physical_Group#Tower_Beam_Above_Ground, Unit:= m, NumDofs:= 6}]
[Add_Node{Physical_Group#Tower_Embedded_Beam, Unit:= m, NumDofs:= 6}]

# Adding 3dofs nodes of soil
[Add_Node{Physical_Group#Soil, Unit:= m, NumDofs:= 3}]

#Adding material
[Add_Linear_Elastic_Isotropic_3D{MaterialNo:= 1, Density:= 2000*kg/m^3, ElasticModulus:= 2e7*Pa, PoissonRatio:= 0.3}]

#Adding elements
[Add_8NodeBrick{Physical_Group#Soil, MaterialNo:= 1}]
[Add_Beam_Elastic{Physical_Group#Tower_Beam_Above_Ground, CrossSection:= 1*m^2, ElasticModulus:= 200e9*Pa, ShearModulus:= 70e9*Pa, Jx:= 1.63*m^4, Iy:= 0.833*m^4, Iz:=  0.833*m^4, Density:= 6800*kg/m^3, XZPlnVect_x:= 0, XZPlnVect_y:= 1, XZPlnVect_z:= 0, J1_x:= 0*m, J1_y:= 0*m, J1_z:= 0*m, J2_x:= 0*m, J2_y:= 0*m, J2_z:= 0*m}]
[Add_Beam_Elastic{Physical_Group#Tower_Embedded_Beam, CrossSection:= 1*m^2, ElasticModulus:= 200e9*Pa, ShearModulus:= 70e9*Pa, Jx:= 1.63*m^4, Iy:=  0.833*m^4, Iz:=  0.833*m^4, Density:= 6800*kg/m^3, XZPlnVect_x:= 0, XZPlnVect_y:= 1, XZPlnVect_z:= 0, J1_x:= 0*m, J1_y:= 0*m, J1_z:= 0*m, J2_x:= 0*m, J2_y:= 0*m, J2_z:= 0*m}]

# including geometry file
[Include{"Example_3_geometry.fei"}]

# start a new stage
[New_Loading_Stage{StageName:= "Stage1_Lateral_Load"}]

# Apply Fixities at the base of soil
[Fix_Dofs{Physical_Group#Soil_Base_Surface, DofTypes:= ux uy uz}]
# Apply lateral load to tower
[Add_Node_Load_Linear{Physical_Group#Tower, ForceType:= Fx, Mag:= 500*kN}]

# include the load file
[Include{"Example_3_load.fei"}]

#Starting the simulation

[Var{variable:= NSteps, value:= 10}]

[Define_Algorithm{AlgoType:= With_no_convergence_check}]
[Define_Solver{SolverName:= UMFPack}]
[Define_Load_Factor_Increment{Incr:= 1/NSteps}]
[Simulate_Using_Static_Algorithm{NumSteps:= NSteps}]

##[Write_Data{ Physical_Group#Top_Surface,filename:= SurfaceLoad}]
[Bye{}] 


