#ELEMENT_ID
	 nc "Nodal Command" 
	 ec "General Elemental Commands"
	 sc "Singular commands"
	 1 "2-node line."
	 2 "3-node triangle."
	 3 "4-node quadrangle."
	 4 "4-node tetrahedron."
	 5 "8-node hexahedron."
	 6 "6-node prism."
	 7 "5-node pyramid."
	 8 "3-node second order line (2 nodes associated with the vertices and 1 with the edge)."
	 9 "6-node second order triangle (3 nodes associated with the vertices and 3 with the edges)."
	10 "9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face)."
	11 "10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges)."
	12 "27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume)."
	13 "18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces)."
	14 "14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face)."
	15 "1-node point."
	16 "8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges)."
	17 "20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges)."
	18 "15-node second order prism (6 nodes associated with the vertices and 9 with the edges)."
	19 "13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges)."
	20 "9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)"
	21 "10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)"
	22 "12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)"
	23 "15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)"
	24 "15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)"
	25 "21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)"
	26 "4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)"
	27 "5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)"
	28 "6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)"
	29 "20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)"
	30 "35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)"
	31 "56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)"
	32 "64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)"
	33 "125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)"
#ENDELEMENT_ID

#ESSI_TAGS
	element
	damping
	displacement
	field
	load
	material
	motion 
	node
	nodes
#ENDESSI_TAGS

// Singular Commands 

	// Damping Commands

		!sc <RayleighDamping{a0,a1,stiffness}|RayleighDamping{damping#1,a0,a1,stiffness}>						    	add damping #{} type Rayleigh with a0={}  a1={}  stiffness_to_use={} ;                               
		!sc <Caughey3rdDamping{a0,a1,a2,stiffness}|Caughey3rdDamping{damping#1,a0,a1,a2,stiffness}>					    add damping #{} type Caughey3rd with a0={} a1={} a2={} stiffness_to_use={} ;          
		!sc <Caughey4thDamping{a0,a1,a2,a3,stiffness}|<Caughey4thDamping{damping#1,a0,a1,a2,a3,stiffness}>>				add damping #{} type Caughey4th with a0={} a1={} a2={} a3={} stiffness_to_use={} ;  

	// Nodal Derived Commands

	// Elemental Derived Commands --- 1 2-node line.

		!sc <BeamElasticLumpedMass{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>			add element #{} type beam_elastic_lumped_mass with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		!sc <Truss{nodes#1,nodes#2,material#1,cs,md}>								    								add element #{} type truss with nodes ({},{}) use material #{} cross_section ={} mass_density={} ; 
		!sc <Contact{nodes#1,nodes#2,ns,ts,fr,mg,cp1,cp2,cp3}>											    			add element #{} type contact with nodes ({},{}) normal_stiffness={} tangential_stiffness={} friction_ratio={} maximum_gap={} contact_plane_vector=({},{},{});
		!sc <BeamElastic{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>					add element #{} type beam_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
		!sc <Penalty{nodes#1,nodes#2,stiffness,dof}>									    							add element #{} type penalty with nodes ({},{}) stiffness={}  dof to constrain {};
		// !1 <BeamDisplacementBased{element#1,nodes#1,nodes#2,material#1}>											    add element #{} type beam_displacement_based with nodes ({},{}) with #{} integration_points use section #{} mass_density={} IntegrationRule={} xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});	
		!sc <Beam9dofElastic{nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>				add element #{} type beam_9dof_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});

	// Elemental Derived Commands --- 2 3-node triangle.

		!sc <3NodeShell_ANDES{nodes#1,nodes#2,nodes#3,material#1,thickness}>				    						add element #{} type 3NodeShell_ANDES with nodes ({},{},{}) use material #{} thickness= {};	

	// Elemental Derived Commands --- 3 4-node quadrangle.

		!sc <4NodeShell_ANDES{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    				add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{}) use material #{} thickness= {};
		!sc <4NodeShell_MITC4{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    				add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
		!sc <4NodeShell_NewMITC4{nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>		    						add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{}) use material #{} thickness= {};

	// Elemental Derived Commands --- 4 4-node tetrahedron.

	// Elemental Derived Commands --- 5 8-node hexahedron.

		!sc <8NodeBrick{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 					add element #{} type 8NodeBrick with nodes ({},{},{},{},{},{},{},{}) use material #{};
		!sc <8NodeBrick_gauss_points{,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 		add element #{} type 8NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{}) use material #{};
		!sc <8NodeBrickLT{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>					add element #{} type 8NodeBrickLT with nodes ({},{},{},{},{},{},{},{}) use material #{};
		!sc <8NodeBrick_elastic{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>			add element #{} type 8NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{}) use material #{};
		!sc <8NodeBrick_u{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>					add element #{} type 8NodeBrick_up with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		!sc <8NodeBrick_upU{nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>				add element #{} type 8NodeBrick_upU with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = { k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
		!sc <8NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,magnitude}>								add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitude ({});
		!sc <8NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,m1,m2,m3,m4}>								add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitudes ({},{},{},{});

	// Elemental Derived Command --- 6 6-node prism.
	// Elemental Derived Command --- 7 5-node pyramid.
	// Elemental Derived Command --- 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge).
	// Elemental Derived Command --- 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges).
	// Elemental Derived Command --- 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face).
	// Elemental Derived Command --- 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges).u
	// Elemental Derived Command --- 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume).

		!sc <27NodeBrick{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>						add element #{} type 27NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		!sc <27NodeBrick_gauss_points{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>		add element #{} type 27NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		!sc <27NodeBrickLT{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>					add element #{} type 27NodeBrickLT with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		!sc <27NodeBrick_elastic{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20,nodes#21,nodes#22,nodes#23,nodes#24,nodes#25,nodes#26,nodes#27}>				add element #{} type 27NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
		!sc <27NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,magnitude}>																																											add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
		!sc <27NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,m1,m2,m3,m4,m5,m6,m7,m8}>																																							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});

	//Elemental Derived Commands  --- 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces).
	//Elemental Derived Commands  --- 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face).
	//Elemental Derived Commands  --- 15 1-node point.

		!sc <mass{node#1,mx,my,mz}>													            	add mass to node #{} mx ={} my ={} mz ={} ;
		!sc <mass{node#1,mx,my,mz,Imx,Imy,Imz}>										            	add mass to node #{} mx ={} my ={} mz ={} Imx ={} Imy ={} Imz ={};
		!sc <PenaltyNode{node#1,stiffness, dof}>									            	add element #{} type penalty_for_applying_generalized_displacement with node ({}) stiffness = {} dof {};
		!sc <NodeDamping{damping#1,node#1}>										            		add damping #{} to node #{};
		!sc <FixNode{node#1,r1}>							            							fix node #{} dofs ({});
		!sc <FixNode{node#1,r1,r2}>							            							fix node #{} dofs ({},{});
		!sc <FixNode{node#1,r1,r2,r3}>							            						fix node #{} dofs ({},{},{});
		!sc <FixNode{node#1,r1,r2,r3,r4}>							            					fix node #{} dofs ({},{},{},{});
		!sc <FixNode{node#1,r1,r2,r3,r4,r5}>							            				fix node #{} dofs ({},{},{},{},{});
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6}>							            				fix node #{} dofs ({},{},{},{},{},{});
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6,r7}>							            			fix node #{} dofs ({},{},{},{},{},{},{});
		!sc <FixNode{node#1,r1,r2,r3,r4,r5,r6,r7,r8}>							            		fix node #{} dofs ({},{},{},{},{},{},{},{});
		!sc <FreeNode{node#1,r1}>							            							free node #{} dofs ({});
		!sc <FreeNode{node#1,r1,r2}>							            						free node #{} dofs ({},{});
		!sc <FreeNode{node#1,r1,r2,r3}>							            						free node #{} dofs ({},{},{});
		!sc <FreeNode{node#1,r1,r2,r3,r4}>							            					free node #{} dofs ({},{},{},{});
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5}>							            				free node #{} dofs ({},{},{},{},{});
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6}>							            			free node #{} dofs ({},{},{},{},{},{});
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6,r7}>							            			free node #{} dofs ({},{},{},{},{},{},{});
		!sc <FreeNode{node#1,r1,r2,r3,r4,r5,r6,r7,r8}>							            		free node #{} dofs ({},{},{},{},{},{},{},{});
		!sc <MasterSlave{node#1,node#2dof}>										            		add constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
		!sc <RemoveMasterSlave{node#1,node#2,dof}>									            	remove constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
		!sc <SinglePointConstraint{node#1,dof,val}>									            	add single point constraint to node #{}  dof to constrain {} constraint value of {};
		!sc <NodeLoad{node#1,dir,mag}>												            	add load #{} to node #{} type linear {} = {}; 
		!sc <NodeLoad{node#1,path_series,dir,mag,seriesfile>						            	add load #{} to node #{} type path_series {} = {} series_file ={};
		!sc <NodeLoad{node#1,path_time_series,dir,mag,time_step,seriesfile>			            	add load #{} to node #{} type path_time_series {} = {} time_step = {} series_file ={};
		!sc <ImposedMotion{node#1,dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 		add imposed motion #{} to node #{} dof {} time_step = {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};	
		!sc <RemoveLoad{node#1}>																	remove load #{};
		!sc <RemoveImposedMotion{node#1}>															remove imposed motion #{};
		!sc <RemoveElement{element#1}>																remove element #{};

	//Variables in ESSI 

		!sc <Var{var,value}>																		var = value;

	//Elemental Derived Commands  --- 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges).
	//Elemental Derived Commands  --- 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges).

		!sc <20NodeBrick{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>								add element #{} type 20NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material # ;
		!sc <20NodeBrick_gauss_points{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>			 		add element #{} type 20NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
		!sc <20NodeBrick_elastic{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>						add element #{} type 20NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
		!sc <20NodeBrick_upU{material#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,nodes#9,nodes#10,nodes#11,nodes#12,nodes#13,nodes#14,nodes#15,nodes#16,nodes#17,nodes#18,nodes#19,nodes#20}>							add element #{} type 20NodeBrick_upU with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} and porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {}	K_f = {};
		!sc <20NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,magnitude}>									 																					add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
		!sc <20NodeBrick_SurfaceLoad{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,m1,m2,m3,m4,m5,m6,m7,m8}>				 																						add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});

	//Elemental Derived Commands  --- 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges).
	//Elemental Derived Commands  --- 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges).
	//Elemental Derived Commands  --- 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)
	//Elemental Derived Commands  --- 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)
	//Elemental Derived Commands  --- 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)
	//Elemental Derived Commands  --- 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)
	//Elemental Derived Commands  --- 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)
	//Elemental Derived Commands  --- 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)
	//Elemental Derived Commands  --- 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)
	//Elemental Derived Commands  --- 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)
	//Elemental Derived Commands  --- 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)
	//Elemental Derived Commands  --- 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)
	//Elemental Derived Commands  --- 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)
	//Elemental Derived Commands  --- 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)
	//Elemental Derived Commands  --- 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)
	//Elemental Derived Commands  --- 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)




// General Elemental Commands

	!ec <SelfWeight{field}|SelfWeight{load#1,element#1,field}>							    																														add load #{} to element #{} type self_weight use acceleration field #{} ;
	!ec <ElementDamping{damping#1}|ElementDamping{damping#1,element#1}>				    																															add damping #{} to element #{};
	!ec <Penalty_Displacement{displacement#1,element#1,dof,scalefactor,seriesfile}|Penalty_Displacement{dof,scalefactor,seriesfile}>		    																	add penalty displacement #{} to element #{} dof {} type path_time_series scale_factor = {} series_file = {};

// Elemental Commands  --- 1 2-node line.

	!1 <BeamElasticLumpedMass{material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>    																														add element #{} type beam_elastic_lumped_mass with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{}); 
	!1 <Truss{material#1,cs,md}>								    																																				add element #{} type truss with nodes ({},{}) use material #{} cross_section ={} mass_density={} ; 
	!1 <Contact{ns,ts,fr,mg,cp1,cp2,cp3}>											    																																	add element #{} type contact with nodes ({},{}) normal_stiffness={} tangential_stiffness={} friction_ratio={} maximum_gap={} contact_plane_vector=({},{},{});
	!1 <BeamElastic{material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|BeamElastic{element#1,nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>									add element #{} type beam_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
	!1 <Penalty{stiffness,dof}|Penalty{element#1,nodes#1,nodes#2,stiffness,dof}>												    																				add element #{} type penalty with nodes ({},{}) stiffness={}  dof to constrain {};
	// !1 <BeamDisplacementBased{element#1,nodes#1,nodes#2,material#1}>											    																																	add element #{} type beam_displacement_based with nodes ({},{}) with #{} integration_points use section #{} mass_density={} IntegrationRule={} xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});	
	!1 <Beam9dofElastic{material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}|Beam9dofElastic{element#1,nodes#1,nodes#2,material#1,cs,em,sm,Jx,Iy,Iz,m,xz,xz,xz,j1,j1,j1,j2,j2,j2}>							add element #{} type beam_9dof_elastic with nodes ({},{}) cross_section={} elastic_modulus={} shear_modulus={} torsion_Jx={} bending_Iy={} bending_Iz={} mass_density={}  xz_plane_vector=({},{},{}) joint_1_offset=({},{},{}) joint_2_offset=({},{},{});
	
//Elemental Commands  --- 2 3-node triangle.
	
	!2 <3NodeShell_ANDES{material#1,thickness}|3NodeShell_ANDES{element#1,nodes#1,nodes#2,nodes#3,material#1,thickness}>				    																		add element #{} type 3NodeShell_ANDES with nodes ({},{},{}) use material #{} thickness= {};	
	
//Elemental Commands  --- 3 4-node quadrangle.

	!3 <4NodeShell_ANDES{material#1,thickness}|4NodeShell_ANDES{element#1,nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    																add element #{} type 4NodeShell_ANDES with nodes ({},{},{},{}) use material #{} thickness= {};
	!3 <4NodeShell_MITC4{material#1,thickness}|4NodeShell_MITC4{element#1,nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>				    																add element #{} type 4NodeShell_MITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
	!3 <4NodeShell_NewMITC4{material#1,thickness}|4NodeShell_NewMITC4{element#1,nodes#1,nodes#2,nodes#3,nodes#4,material#1,thickness}>		    																	add element #{} type 4NodeShell_NewMITC4 with nodes ({},{},{},{}) use material #{} thickness= {};
	
//Elemental Commands  --- 4 4-node tetrahedron.

//Elemental Commands  --- 5 8-node hexahedron.

	!5 <8NodeBrick{material#1}|8NodeBrick{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 																					add element #{} type 8NodeBrick with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <8NodeBrick_gauss_points{material#1}|8NodeBrick_gauss_points{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}> 															add element #{} type 8NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <8NodeBrickLT{material#1}|8NodeBrickLT{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>																				add element #{} type 8NodeBrickLT with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <8NodeBrick_elastic{material#1}|8NodeBrick_elastic{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>																	add element #{} type 8NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{}) use material #{};
	!5 <8NodeBrick_up{material#1}|8NodeBrick_u{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>																				add element #{} type 8NodeBrick_up with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
	!5 <8NodeBrick_upU{material#1}|8NodeBrick_upU{element#1,nodes#1,nodes#2,nodes#3,nodes#4,nodes#5,nodes#6,nodes#7,nodes#8,material#1}>																			add element #{} type 8NodeBrick_upU with nodes ({},{},{},{},{},{},{},{}) use material #{} porosity = {} alpha = {} rho_s = {} rho_f = { k_x = {} k_y = {} k_z = {} K_s = {} K_f= {};
	!5-c <8NodeBrick_SurfaceLoad{PhyEntTag,magnitude}>																																								add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitude ({});
	!5-c <8NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4}>																																							add load #{} to element #{} type surface at nodes ({},{},{},{}) with magnitudes ({},{},{},{});
	
//Elemental Commands  --- 6 6-node prism.
//Elemental Commands  --- 7 5-node pyramid.
//Elemental Commands  --- 8 3-node second order line (2 nodes associated with the vertices and 1 with the edge).
//Elemental Commands  --- 9 6-node second order triangle (3 nodes associated with the vertices and 3 with the edges).
//Elemental Commands  --- 10 9-node second order quadrangle (4 nodes associated with the vertices, 4 with the edges and 1 with the face).
//Elemental Commands  --- 11 10-node second order tetrahedron (4 nodes associated with the vertices and 6 with the edges).u
//Elemental Commands  --- 12 27-node second order hexahedron (8 nodes associated with the vertices, 12 with the edges, 6 with the faces and 1 with the volume).

	!12 <27NodeBrick{material#1}>																add element #{} type 27NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <27NodeBrick_gauss_points{material#1}>													add element #{} type 27NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <27NodeBrickLT{material#1}>																add element #{} type 27NodeBrickLT with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12 <27NodeBrick_elastic{material#1}>														add element #{} type 27NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{};
	!12-c <27NodeBrick_SurfaceLoad{PhyEntTag,magnitude}>										add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
	!12-c <27NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>							add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});
	
//Elemental Commands  --- 13 18-node second order prism (6 nodes associated with the vertices, 9 with the edges and 3 with the quadrangular faces).
//Elemental Commands  --- 14 14-node second order pyramid (5 nodes associated with the vertices, 8 with the edges and 1 with the quadrangular face).
//Elemental Commands  --- 15 1-node point.

	!nc <mass{mx,my,mz}>													            		add mass to node #{} mx ={} my ={} mz ={} ;
	!nc <mass{mx,my,mz,Imx,Imy,Imz}>										            		add mass to node #{} mx ={} my ={} mz ={} Imx ={} Imy ={} Imz ={};
	!nc <PenaltyNode{stiffness, dof}>									            			add element #{} type penalty_for_applying_generalized_displacement with node ({}) stiffness = {} dof {};
	!nc <NodeDamping{damping#1}>										            			add damping #{} to node #{};
	!nc <FixNode{r1}>							            									fix node #{} dofs ({});
	!nc <FixNode{r1,r2}>							            								fix node #{} dofs ({},{});
	!nc <FixNode{r1,r2,r3}>							            								fix node #{} dofs ({},{},{});
	!nc <FixNode{r1,r2,r3,r4}>							            							fix node #{} dofs ({},{},{},{});
	!nc <FixNode{r1,r2,r3,r4,r5}>							            						fix node #{} dofs ({},{},{},{},{});
	!nc <FixNode{r1,r2,r3,r4,r5,r6}>							            					fix node #{} dofs ({},{},{},{},{},{});
	!nc <FixNode{r1,r2,r3,r4,r5,r6,r7}>							            					fix node #{} dofs ({},{},{},{},{},{},{});
	!nc <FixNode{r1,r2,r3,r4,r5,r6,r7,r8}>							            				fix node #{} dofs ({},{},{},{},{},{},{},{});
	!nc <FreeNode{r1}>							            									free node #{} dofs ({});
	!nc <FreeNode{r1,r2}>							            								free node #{} dofs ({},{});
	!nc <FreeNode{r1,r2,r3}>							            							free node #{} dofs ({},{},{});
	!nc <FreeNode{r1,r2,r3,r4}>							            							free node #{} dofs ({},{},{},{});
	!nc <FreeNode{r1,r2,r3,r4,r5}>							            						free node #{} dofs ({},{},{},{},{});
	!nc <FreeNode{r1,r2,r3,r4,r5,r6}>							            					free node #{} dofs ({},{},{},{},{},{});
	!nc <FreeNode{r1,r2,r3,r4,r5,r6,r7}>							            				free node #{} dofs ({},{},{},{},{},{},{});
	!nc <FreeNode{r1,r2,r3,r4,r5,r6,r7,r8}>							            				free node #{} dofs ({},{},{},{},{},{},{},{});
	!nc <MasterSlave{node#1,dof}>										            			add constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
	!nc <RemoveMasterSlave{node#1,dof}>									            			remove constraint equal dof with master node #{} and slave node #{}  dof to constrain {};
	!nc <SinglePointConstraint{dof,val}>									            		add single point constraint to node #{}  dof to constrain {} constraint value of {};
	!nc <NodeLoad{Dir,mag}>												            			add load #{} to node #{} type linear {} = {}; 
	!nc <NodeLoad{path_series,dir,mag,seriesfile>						            			add load #{} to node #{} type path_series {} = {} series_file ={};
	!nc <NodeLoad{path_time_series,dir,mag,time_step,seriesfile>			            		add load #{} to node #{} type path_time_series {} = {} time_step = {} series_file ={};
	!nc <ImposedMotion{dof,time_step,dis_scl,dis_fl,vel_scl,vel_fl,acc_scl,acc_fl}> 			add imposed motion #{} to node #{} dof {} time_step = {} displacement_scale_unit = {} displacement_file = {} velocity_scale_unit = {} velocity_file = {} acceleration_scale_unit = {} acceleration_file ={};	
		
//Elemental Commands  --- 16 8-node second order quadrangle (4 nodes associated with the vertices and 4 with the edges).
//Elemental Commands  --- 17 20-node second order hexahedron (8 nodes associated with the vertices and 12 with the edges).

	!17 <20NodeBrick{material#1}>																add element #{} type 20NodeBrick using  Gauss points each direction with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material # ;
	!17 <20NodeBrick_gauss_points{material#1}>			 										add element #{} type 20NodeBrick with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
	!17 <20NodeBrick_elastic{material#1}>											 			add element #{} type 20NodeBrick_elastic with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} ;
	!17 <20NodeBrick_upU{material#1}>												 			add element #{} type 20NodeBrick_upU with nodes ({},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}) use material #{} and porosity = {} alpha = {} rho_s = {} rho_f = {} k_x = {} k_y = {} k_z = {} K_s = {}	K_f = {};
	!17-c <20NodeBrick_SurfaceLoad{PhyEntTag,magnitude}>									 	add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitude ({});
	!17-c <20NodeBrick_SurfaceLoad{PhyEntTag,m1,m2,m3,m4,m5,m6,m7,m8}>				 			add load #{} to element #{} type surface at nodes ({},{},{},{},{},{},{},{}) with magnitudes ({},{},{},{},{},{},{},{});
	
//Elemental Commands  --- 18 15-node second order prism (6 nodes associated with the vertices and 9 with the edges).
//Elemental Commands  --- 19 13-node second order pyramid (5 nodes associated with the vertices and 8 with the edges).
//Elemental Commands  --- 20 9-node third order incomplete triangle (3 nodes associated with the vertices, 6 with the edges)
//Elemental Commands  --- 21 10-node third order triangle (3 nodes associated with the vertices, 6 with the edges, 1 with the face)
//Elemental Commands  --- 22 12-node fourth order incomplete triangle (3 nodes associated with the vertices, 9 with the edges)
//Elemental Commands  --- 23 15-node fourth order triangle (3 nodes associated with the vertices, 9 with the edges, 3 with the face)
//Elemental Commands  --- 24 15-node fifth order incomplete triangle (3 nodes associated with the vertices, 12 with the edges)
//Elemental Commands  --- 25 21-node fifth order complete triangle (3 nodes associated with the vertices, 12 with the edges, 6 with the face)
//Elemental Commands  --- 26 4-node third order edge (2 nodes associated with the vertices, 2 internal to the edge)
//Elemental Commands  --- 27 5-node fourth order edge (2 nodes associated with the vertices, 3 internal to the edge)
//Elemental Commands  --- 28 6-node fifth order edge (2 nodes associated with the vertices, 4 internal to the edge)
//Elemental Commands  --- 29 20-node third order tetrahedron (4 nodes associated with the vertices, 12 with the edges, 4 with the faces)
//Elemental Commands  --- 30 35-node fourth order tetrahedron (4 nodes associated with the vertices, 18 with the edges, 12 with the faces, 1 in the volume)
//Elemental Commands  --- 31 56-node fifth order tetrahedron (4 nodes associated with the vertices, 24 with the edges, 24 with the faces, 4 in the volume)
//Elemental Commands  --- 92 64-node third order hexahedron (8 nodes associated with the vertices, 24 with the edges, 24 with the faces, 8 in the volume)
//Elemental Commands  --- 93 125-node fourth order hexahedron (8 nodes associated with the vertices, 36 with the edges, 54 with the faces, 27 in the volume)